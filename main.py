# main.py
"""
–ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –ª–∏—Ü
–ê–≤—Ç–æ—Ä: –°—Ç—É–¥–µ–Ω—Ç 4 –∫—É—Ä—Å–∞ –û–º–ì–£ –∏–º. –§.–ú. –î–æ—Å—Ç–æ–µ–≤—Å–∫–æ–≥–æ
–í–ö–†: –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –ª–∏—Ü
–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: 10.03.01 ¬´–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å¬ª
–ü—Ä–æ—Ñ–∏–ª—å: ¬´–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö —Å–∏—Å—Ç–µ–º¬ª
–£—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ: –û–º–ì–£ –∏–º. –§.–ú. –î–æ—Å—Ç–æ–µ–≤—Å–∫–æ–≥–æ, —Ñ–∞–∫—É–ª—å—Ç–µ—Ç –¶–¢–ö

–û–ø–∏—Å–∞–Ω–∏–µ:
–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É –±–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ
—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –ª–∏—Ü —Å –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π –∞—É–¥–∏—Ç–∞
–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
—Å–∏—Å—Ç–µ–º—ã –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫.

–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:
- –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ –∏ –∏—Ö –ø—Ä–æ–≤–µ—Ä–∫–∏
- –í—Å–µ–æ–±—ä–µ–º–ª—é—â–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –¥–ª—è –≥–æ—Ç–æ–≤–æ–≥–æ –∫ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É —Ä–µ—à–µ–Ω–∏—è
- –ú–µ—Ö–∞–Ω–∏–∑–º—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
- –°–ª–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∞—É–¥–∏—Ç–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
- –£–¥–æ–±–Ω—ã–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∏ –Ω–µ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- Python 3.12+
- OpenCV –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–≥–æ –∑—Ä–µ–Ω–∏—è
- face_recognition –¥–ª—è –±–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
- tkinter –¥–ª—è –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
- SQLite –¥–ª—è —Å–ª–æ—è –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö
- PIL/Pillow –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
"""

import tkinter as tk  # –û—Å–Ω–æ–≤–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
import sys  # –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º
import os  # –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π –∏ —Ñ–∞–π–ª–∞–º–∏
import time  # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

# –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø–∞–º—è—Ç–∏
try:
    import psutil  # –î–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
    PSUTIL_AVAILABLE = True
except ImportError:
    PSUTIL_AVAILABLE = False
    print("‚ö†Ô∏è  psutil –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–∞–º—è—Ç–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")
    print("   –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏: pip install psutil")


def get_memory_usage():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –ø–∞–º—è—Ç–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–º
    
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        dict: –°–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–∞–º—è—Ç–∏ –≤ –ú–ë
    """
    if not PSUTIL_AVAILABLE:
        return {'rss': 0, 'vms': 0, 'percent': 0}
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø—Ä–æ—Ü–µ—Å—Å–µ
        process = psutil.Process(os.getpid())
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞–º—è—Ç–∏
        memory_info = process.memory_info()
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –ú–ë
        memory_data = {
            'rss': round(memory_info.rss / 1024 / 1024, 2),  # –†–µ–∑–∏–¥–µ–Ω—Ç–Ω–∞—è –ø–∞–º—è—Ç—å (RAM)
            'vms': round(memory_info.vms / 1024 / 1024, 2),  # –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å
            'percent': round(process.memory_percent(), 2)     # –ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –æ–±—â–µ–π –ø–∞–º—è—Ç–∏ —Å–∏—Å—Ç–µ–º—ã
        }
        
        return memory_data
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞–º—è—Ç–∏: {e}")
        return {'rss': 0, 'vms': 0, 'percent': 0}


def display_memory_stats(stage_name, memory_before, memory_after):
    """
    –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏ –¥–ª—è —ç—Ç–∞–ø–∞
    
    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        stage_name (str): –ù–∞–∑–≤–∞–Ω–∏–µ —ç—Ç–∞–ø–∞
        memory_before (dict): –ü–∞–º—è—Ç—å –¥–æ —ç—Ç–∞–ø–∞
        memory_after (dict): –ü–∞–º—è—Ç—å –ø–æ—Å–ª–µ —ç—Ç–∞–ø–∞
    """
    if not PSUTIL_AVAILABLE:
        return
    
    memory_diff = memory_after['rss'] - memory_before['rss']
    print(f"   üíæ –ü–∞–º—è—Ç—å –ø–æ—Å–ª–µ {stage_name}: {memory_after['rss']} –ú–ë (–∏–∑–º–µ–Ω–µ–Ω–∏–µ: {memory_diff:+.2f} –ú–ë)")


def measure_loading_performance():
    """
    –ò–∑–º–µ—Ä–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∏—Å—Ç–µ–º—ã —Å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π –ø–æ —ç—Ç–∞–ø–∞–º
    
    –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ—à–∞–≥–æ–≤–æ–µ –∏–∑–º–µ—Ä–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –≤—ã—è–≤–ª–µ–Ω–∏—è —É–∑–∫–∏—Ö –º–µ—Å—Ç.
    
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        tuple: (—Å–ª–æ–≤–∞—Ä—å_–≤—Ä–µ–º–µ–Ω, —Å–ª–æ–≤–∞—Ä—å_–ø–∞–º—è—Ç–∏, root_–æ–∫–Ω–æ, —ç–∫–∑–µ–º–ø–ª—è—Ä_–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è) –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ
    """
    times = {}
    memory_stats = {}
    
    # –ò–∑–º–µ—Ä–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏ –≤ –Ω–∞—á–∞–ª–µ
    initial_memory = get_memory_usage()
    memory_stats['initial'] = initial_memory
    if PSUTIL_AVAILABLE:
        print(f"üîã –ù–∞—á–∞–ª—å–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏: {initial_memory['rss']} –ú–ë")
    print("üìä –ù–∞—á–∞–ª–æ –∏–∑–º–µ—Ä–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏...")
    
    # –≠—Ç–∞–ø 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
    start = time.time()
    memory_before = get_memory_usage()
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ—Ä–µ
    display_system_header()
    
    # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    if not validate_system_dependencies():
        # –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã—Ö–æ–¥ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–π—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
        return None
    
    times['dependencies'] = time.time() - start
    memory_after = get_memory_usage()
    memory_stats['dependencies'] = memory_after
    
    print(f"   ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {times['dependencies']:.3f} —Å–µ–∫")
    display_memory_stats("–ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π", memory_before, memory_after)
    
    # –≠—Ç–∞–ø 2: –ò–º–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π —Å–∏—Å—Ç–µ–º—ã
    start = time.time()
    memory_before = get_memory_usage()
    print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã...")
    
    # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –∏–º–ø–æ—Ä—Ç—ã –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ—à–∏–±–æ–∫ –∏–º–ø–æ—Ä—Ç–∞
    from gui.main_application import FaceRecognitionSystem
    from audit.integration import SecurityAuditIntegration
    
    times['imports'] = time.time() - start
    memory_after = get_memory_usage()
    memory_stats['imports'] = memory_after
    
    print(f"   ‚úÖ –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π: {times['imports']:.3f} —Å–µ–∫")
    display_memory_stats("–∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π", memory_before, memory_after)
    
    # –≠—Ç–∞–ø 3: –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    start = time.time()
    memory_before = get_memory_usage()
    print("üéØ –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –æ–∫–Ω–∞ tkinter
    root = tk.Tk()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –ª–∏—Ü
    face_recognition_app = FaceRecognitionSystem(root)
    
    times['app_creation'] = time.time() - start
    memory_after = get_memory_usage()
    memory_stats['app_creation'] = memory_after
    
    print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {times['app_creation']:.3f} —Å–µ–∫")
    display_memory_stats("—Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è", memory_before, memory_after)
    
    # –≠—Ç–∞–ø 4: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∞—É–¥–∏—Ç–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    start = time.time()
    memory_before = get_memory_usage()
    print("üõ°Ô∏è  –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∞—É–¥–∏—Ç–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...")
    
    # –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤—Å–µ–æ–±—ä–µ–º–ª—é—â–µ–π —Å–∏—Å—Ç–µ–º—ã –∞—É–¥–∏—Ç–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    face_recognition_app = SecurityAuditIntegration.integrate_comprehensive_audit_system(
        face_recognition_app
    )
    
    times['audit_integration'] = time.time() - start
    memory_after = get_memory_usage()
    memory_stats['audit_integration'] = memory_after
    
    print(f"   ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∞—É–¥–∏—Ç–∞: {times['audit_integration']:.3f} —Å–µ–∫")
    display_memory_stats("–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∞—É–¥–∏—Ç–∞", memory_before, memory_after)
    
    return times, memory_stats, root, face_recognition_app


def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã –±–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    
    –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –ª–∏—Ü:
    1. –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ –∏ –∞–≤—Ç–æ—Ä–µ
    2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    4. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∞—É–¥–∏—Ç–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ—Ö–∞–Ω–∏–∑–º–æ–≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    6. –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫:
    - –í—Å–µ–æ–±—ä–µ–º–ª—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    - –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —É—Ö—É–¥—à–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    - –£–¥–æ–±–Ω—ã–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é
    - –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–∫–∞—Ö
    
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        None
    """
    # –û–±—â–∏–π —Ç–∞–π–º–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    total_start_time = time.time()
    
    print("üìä –†–ï–ñ–ò–ú –ò–ó–ú–ï–†–ï–ù–ò–Ø –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò –ò –ü–ê–ú–Ø–¢–ò")
    print("=" * 80)
    
    try:
        # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–∑–º–µ—Ä–µ–Ω–∏–π –ø–æ —ç—Ç–∞–ø–∞–º
        result = measure_loading_performance()
        if result is None:
            # –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã—Ö–æ–¥ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
            input("\n‚è∏Ô∏è  –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")
            return
        
        times, memory_stats, root, face_recognition_app = result
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        root.protocol("WM_DELETE_WINDOW", face_recognition_app.handle_application_shutdown)
        
        # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–±—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–≥—Ä—É–∑–∫–∏
        total_time = time.time() - total_start_time
        final_memory = get_memory_usage()
        
        # –í—ã–≤–æ–¥ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        print("\n" + "=" * 70)
        print("üìà –î–ï–¢–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò")
        print("=" * 70)
        print(f"üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:     {times['dependencies']:.3f} —Å–µ–∫")
        print(f"üì¶ –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π:            {times['imports']:.3f} —Å–µ–∫")
        print(f"üéØ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:       {times['app_creation']:.3f} —Å–µ–∫")
        print(f"üõ°Ô∏è  –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∞—É–¥–∏—Ç–∞:        {times['audit_integration']:.3f} —Å–µ–∫")
        print("-" * 70)
        print(f"üèÅ –û–ë–©–ï–ï –í–†–ï–ú–Ø –ó–ê–ì–†–£–ó–ö–ò:      {total_time:.3f} –°–ï–ö–£–ù–î")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–∞–º—è—Ç–∏ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ psutil –¥–æ—Å—Ç—É–ø–µ–Ω)
        if PSUTIL_AVAILABLE:
            print("\n" + "=" * 70)
            print("üíæ –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û–¢–†–ï–ë–õ–ï–ù–ò–Ø –ü–ê–ú–Ø–¢–ò")
            print("=" * 70)
            print(f"üîã –ù–∞—á–∞–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å:          {memory_stats['initial']['rss']} –ú–ë")
            print(f"üìã –ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {memory_stats['dependencies']['rss']} –ú–ë")
            print(f"üì¶ –ü–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π:     {memory_stats['imports']['rss']} –ú–ë")
            print(f"üéØ –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {memory_stats['app_creation']['rss']} –ú–ë")
            print(f"üõ°Ô∏è  –ü–æ—Å–ª–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∞—É–¥–∏—Ç–∞:  {memory_stats['audit_integration']['rss']} –ú–ë")
            print("-" * 70)
            print(f"üíø –ò–¢–û–ì–û–í–û–ï –ü–û–¢–†–ï–ë–õ–ï–ù–ò–ï:      {final_memory['rss']} –ú–ë")
            print(f"üìä –û–ë–©–ò–ô –ü–†–ò–†–û–°–¢ –ü–ê–ú–Ø–¢–ò:      {final_memory['rss'] - memory_stats['initial']['rss']:.2f} –ú–ë")
            print(f"üîÑ –ü–†–û–¶–ï–ù–¢ –û–¢ –°–ò–°–¢–ï–ú–ù–û–ô –ü–ê–ú–Ø–¢–ò: {final_memory['percent']:.2f}%")
        
        print("=" * 70)
        
        # –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        print("\nüìä –ê–ù–ê–õ–ò–ó –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò:")
        slowest_stage = max(times.items(), key=lambda x: x[1])
        print(f"   üêå –°–∞–º—ã–π –º–µ–¥–ª–µ–Ω–Ω—ã–π —ç—Ç–∞–ø: {slowest_stage[0]} ({slowest_stage[1]:.3f} —Å–µ–∫)")
        
        fastest_stage = min(times.items(), key=lambda x: x[1])
        print(f"   ‚ö° –°–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π —ç—Ç–∞–ø: {fastest_stage[0]} ({fastest_stage[1]:.3f} —Å–µ–∫)")
        
        # –ê–Ω–∞–ª–∏–∑ –ø–∞–º—è—Ç–∏ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ psutil –¥–æ—Å—Ç—É–ø–µ–Ω)
        if PSUTIL_AVAILABLE:
            memory_growth = {}
            prev_memory = memory_stats['initial']['rss']
            for stage, memory_info in list(memory_stats.items())[1:]:
                growth = memory_info['rss'] - prev_memory
                memory_growth[stage] = growth
                prev_memory = memory_info['rss']
            
            largest_memory_growth = max(memory_growth.items(), key=lambda x: x[1])
            print(f"   üêò –ù–∞–∏–±–æ–ª—å—à–∏–π –ø—Ä–∏—Ä–æ—Å—Ç –ø–∞–º—è—Ç–∏: {largest_memory_growth[0]} (+{largest_memory_growth[1]:.2f} –ú–ë)")
        
        # –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ —ç—Ç–∞–ø–∞–º
        print(f"\nüìà –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –í–†–ï–ú–ï–ù–ò:")
        for stage, stage_time in times.items():
            percentage = (stage_time / total_time) * 100
            print(f"   {stage}: {percentage:.1f}%")
        
        print("\n‚úÖ –°–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")
        print("üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...")
        print("-" * 70)
        
        # –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        root.mainloop()
        
    except ImportError as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π —Å–∏—Å—Ç–µ–º—ã
        total_time = time.time() - total_start_time
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã: {e}")
        print(f"‚è±Ô∏è  –í—Ä–µ–º—è –¥–æ –æ—à–∏–±–∫–∏: {total_time:.3f} —Å–µ–∫—É–Ω–¥")
        print("üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞:")
        print("   üìÅ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –º–æ–¥—É–ª–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø–∞–ø–∫–∞—Ö")
        print("   üîó –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ø—É—Ç–µ–π –∏–º–ø–æ—Ä—Ç–∞")
        print("   üìã –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –Ω–∞–ª–∏—á–∏–∏ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ __init__.py")
        input("\n‚è∏Ô∏è  –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")
        
    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—á–∏—Ö –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –∑–∞–ø—É—Å–∫–∞
        total_time = time.time() - total_start_time
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã: {e}")
        print(f"‚è±Ô∏è  –í—Ä–µ–º—è –¥–æ –æ—à–∏–±–∫–∏: {total_time:.3f} —Å–µ–∫—É–Ω–¥")
        print("üõ†Ô∏è  –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   üíæ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –ë–î")
        print("   üì∏ –ü—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –≤–µ–±-–∫–∞–º–µ—Ä–µ")
        print("   üñ•Ô∏è  –û—à–∏–±–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
        input("\n‚è∏Ô∏è  –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")


def display_system_header():
    """
    –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ–µ–∫—Ç–µ –∏ –∞–≤—Ç–æ—Ä–µ
    
    –í—ã–≤–æ–¥–∏—Ç –≤—Å–µ–æ–±—ä–µ–º–ª—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ, –∞–≤—Ç–æ—Ä–µ –∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏
    –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã.
    """
    print("üéØ –°–ò–°–¢–ï–ú–ê –ë–ò–û–ú–ï–¢–†–ò–ß–ï–°–ö–û–ô –ò–î–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò –ù–ê –û–°–ù–û–í–ï –†–ê–°–ü–û–ó–ù–ê–í–ê–ù–ò–Ø –õ–ò–¶")
    print("=" * 80)
    print("üìã –í–ö–†: –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –ª–∏—Ü")
    print("üéì –°—Ç—É–¥–µ–Ω—Ç 4 –∫—É—Ä—Å–∞ –æ—á–Ω–æ–π —Ñ–æ—Ä–º—ã –æ–±—É—á–µ–Ω–∏—è")
    print("üìö –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: 10.03.01 ¬´–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å¬ª")
    print("üéØ –ü—Ä–æ—Ñ–∏–ª—å: ¬´–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö —Å–∏—Å—Ç–µ–º¬ª")
    print("üèõÔ∏è  –û–º–ì–£ –∏–º. –§.–ú. –î–æ—Å—Ç–æ–µ–≤—Å–∫–æ–≥–æ, —Ñ–∞–∫—É–ª—å—Ç–µ—Ç –¶–¢–ö")
    print("üìÖ –ì–æ–¥ –∑–∞—â–∏—Ç—ã: 2025")
    print("=" * 80)


def validate_system_dependencies():
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤—Å–µ—Ö –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
    –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã.
    
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        bool: True –µ—Å–ª–∏ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã, False –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–∫–∞—Ö
        
    –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏:
    - –û—Å–Ω–æ–≤–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Python (–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏)
    - –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–≥–æ –∑—Ä–µ–Ω–∏—è (OpenCV, face_recognition)
    - –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (tkinter, PIL)
    - –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö (numpy, –∏ —Ç.–¥.)
    """
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å –æ–ø–∏—Å–∞–Ω–∏—è–º–∏
    critical_dependencies = [
        ('tkinter', '–í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞'),
        ('cv2', 'OpenCV –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–≥–æ –∑—Ä–µ–Ω–∏—è –∏ —Ä–∞–±–æ—Ç—ã —Å –∫–∞–º–µ—Ä–æ–π'), 
        ('face_recognition', '–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –±–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –ª–∏—Ü'),
        ('PIL', 'Pillow –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π'),
        ('numpy', 'NumPy –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å –º–∞—Å—Å–∏–≤–∞–º–∏')
    ]
    
    # –°–ø–∏—Å–æ–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    missing_dependencies = []
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    for module_name, description in critical_dependencies:
        try:
            # –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª—è
            __import__(module_name)
            print(f"   ‚úÖ {module_name} - {description}")
        except ImportError:
            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
            print(f"   ‚ùå {module_name} - {description} (–ù–ï –ù–ê–ô–î–ï–ù–û)")
            missing_dependencies.append(module_name)
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏
    if missing_dependencies:
        print(f"\nüö® –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: {len(missing_dependencies)}")
        display_dependency_installation_instructions(missing_dependencies)
        return False
    
    print("‚úÖ –í—Å–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã!")
    return True


def display_dependency_installation_instructions(missing_dependencies):
    """
    –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    
    –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á–µ—Ç–∫–∏–µ –∏ –≤—ã–ø–æ–ª–Ω–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è
    —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã.
    
    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        missing_dependencies (list): –°–ø–∏—Å–æ–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –º–æ–¥—É–ª–µ–π
    """
    print("\nüõ†Ô∏è  –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –£–°–¢–ê–ù–û–í–ö–ï –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô:")
    print("-" * 50)
    
    print("üì¶ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Å–ø–æ—Å–æ–± (requirements.txt):")
    print("   pip install -r requirements.txt")
    
    print("\nüì¶ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏:")
    
    # –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –º–æ–¥—É–ª–µ–π –∏–º–µ–Ω–∞–º –ø–∞–∫–µ—Ç–æ–≤ pip
    pip_package_mapping = {
        'cv2': 'opencv-python',
        'PIL': 'Pillow',
        'face_recognition': 'face_recognition',
        'numpy': 'numpy',
        'tkinter': '–æ–±—ã—á–Ω–æ –≤—Å—Ç—Ä–æ–µ–Ω –≤ Python (–ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python)'
    }
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    for module in missing_dependencies:
        package_name = pip_package_mapping.get(module, module)
        if module == 'tkinter':
            print(f"   ‚ö†Ô∏è  {module}: {package_name}")
        else:
            print(f"   pip install {package_name}")
    
    print("\nüí° –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("   üêç –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ Python 3.12+")
    print("   üîÑ –û–±–Ω–æ–≤–∏—Ç–µ pip: python -m pip install --upgrade pip")
    print("   üåê –ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å —Å–µ—Ç—å—é –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: pip install --user")
    print("   ü™ü Windows: –í–æ–∑–º–æ–∂–Ω–æ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è Visual Studio Build Tools")


if __name__ == "__main__":
    """
    –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É –ø—Ä–∏ –ø—Ä—è–º–æ–º –∑–∞–ø—É—Å–∫–µ —Å–∫—Ä–∏–ø—Ç–∞
    
    –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏
    –¥–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è (–Ω–µ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ).
    """
    main()